


(function($){

    var classHidden = 'hidden';

    var handlerClinica = $('.sys-filtro-clinica');
    var handlerDia     = $('.sys-filtro-dia');


    function filtroDia(dia){

        var dia = handlerDia.val();

        // se o dia não foi selecionado/está vazio
        // exibe todos os dias
        if(dia == ''){
            $('.sys-dia').removeClass( classHidden );
            return false;
        }

        // oculta os "dias" não encontrados
        $('.sys-dia:not([data-dia*="'+ dia +'"])').addClass( classHidden );

        // exibe todos os "dias" encontrados
        $('.sys-dia[data-dia*="'+ dia +'"]').removeClass( classHidden );


        // Se algum "dia" possui todas as clínicas
        // "dentro" escondidas, esta será escondida também
        $('.sys-dia').each(function(item, index){

            var total = $(this).find('.sys-clinica').length;
            var totalOculto = $(this).find('.sys-clinica.'+ classHidden).length;

            if( total == totalOculto ){
                $(this).addClass( classHidden )
            }

        });

    }

    function filtroClinica(clinica){

        if(clinica == ''){
            $('.sys-clinica').removeClass( classHidden );
            return false;
        }

        $('.sys-clinica:not([data-id-clinica*="'+ clinica +'"])').addClass( classHidden );
        $('.sys-clinica[data-id-clinica*="'+ clinica +'"]').removeClass( classHidden );
    }

    function filtro(){
        var dia     = handlerDia.val();
        var clinica = handlerClinica.val();

        filtroDia(dia);
        filtroClinica(clinica);
    }

    handlerClinica.change(filtro);
    handlerDia.change(filtro);

})(jQuery);

function scrollTo(){
    var day = $(this).attr('data-scroll-to');
    console.log(day)
    var roll = $(day).offset().top;

    $('html, body').animate({
        scrollTop: roll - 80
    }, 400);
}

$(document).ready(function(){
    $(document).on('click','.js-scroll-to', scrollTo);
});

function tsCalendar( _year, _month, _day ){
    // https://www.codemiles.com/javascript-examples/simple-javascript-calendar-t7767.html

    var initialDate = 'yyyy-mm-dd';

    var selectorIdContainer = 'rs-calendar';

    var dateNow      = getDateNow();
    var year         = null;
    var month        = null;
    var day          = null;
    var monthDays    = null;
    var WeekDayOfTheFistDayOfMonth  = null;

    var monthNames  = ["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro", "Dezembro"];
    var dayNames    = ["Domingo","Segunda","Terça","Quarta","Quinta","Sexta", "Sábado"];

    var dates = [];

    function init(){
        year         = getYear();
        month        = getMonth();
        day          = getDay();
        monthDays    = daysInMonth();
        WeekDayOfTheFistDayOfMonth  = getWeekDayOfTheFistDayOfMonth();
    }

    function setInitialDate(){
        initialDate = year + '-' + month + '-' + day;
    }

    function isInitialDate(currentDay){

        if( initialDate ==  (year + '-' + month + '-' + currentDay)){
            return true;
        }
        return false;
    }

    function createDayId(currentDay){
        return year + '-' + zeroFill (2, (month + 1)) + '-' +  zeroFill (2, currentDay) ;
    }

    function getDateNow(){
        return new Date();
    }

    function getMonth(){
        if(typeof _month == 'undefined'){
            return dateNow.getMonth();
        }else{
            return _month - 1;
        }
    }

    function getDay(){
        if(typeof _day == 'undefined'){
            return dateNow.getDate();
        }
        return _day;
    }

    function getYear(){
        if(typeof _year == 'undefined'){
            return dateNow.getFullYear();
        }
        return _year;
    }

    //Determing if February (28,or 29)
    function febNumberOfDays(){
        if ( (year%100!=0) && (year%4==0) || (year%400==0)){
            return 29;
        }
        return 28;
    }

    // quantidade de dias do mês
    function daysInMonth() {
        return new Date(year, (month +1) , 0).getDate();
    }

    // determina qual é o dia da semana do primeiro dia do mês
    function getWeekDayOfTheFistDayOfMonth(){
        var firstDayOfTheMonth = new Date(year, month, 1);
        return firstDayOfTheMonth.getDay();
    }

    function getNextYear(){
        return new Date(year, (month +1) ).getFullYear();
    }

    function getPrevYear(){
        return new Date(year, (month - 1) ).getFullYear();
    }

    function getNextMonth(){
        return new Date(year, (month +1) ).getMonth();
    }

    function getPrevMonth(){
        // console.log( new Date(year, (month - 1) ).getMonth() )
        return new Date(year, (month - 1) ).getMonth();
    }

    function render(){
        calendarBody = compile()

        document.getElementById( selectorIdContainer ).innerHTML = calendarBody;
    }

    function addDate(date, dateInfo){
        dates[date] = {
            day: date
        }
    }

    function compile(){
        var calendarBody = '<div class="rs-calendar__header">';
            calendarBody +=     '<div class="rs-calendar__directions is-next" id="calendar-next" data-year="'+ getNextYear() +'" data-month="'+ (getNextMonth() + 1)  +'"><i class="fa fa-angle-right" aria-hidden="true"></i></div>';
            calendarBody +=     '<div class="rs-calendar__directions is-prev" id="calendar-prev" data-year="'+ getPrevYear() +'" data-month="'+ (getPrevMonth() + 1)  +'"><i class="fa fa-angle-left" aria-hidden="true"></i></div>';
            calendarBody +=     '<div class="rs-calendar__title">' + monthNames[month] + ' ' + year + '</div>' ;
            calendarBody += '</div>';

            calendarBody +='<div class="rs-calendar__week-days calendar-week">';
            calendarBody +='    <div class="rs-calendar__day">Dom</div>';
            calendarBody +='    <div class="rs-calendar__day">Seg</div>';
            calendarBody +='    <div class="rs-calendar__day">Ter</div>';
            calendarBody +='    <div class="rs-calendar__day">Qua</div>';
            calendarBody +='    <div class="rs-calendar__day">Qui</div>';
            calendarBody +='    <div class="rs-calendar__day">Sex</div>';
            calendarBody +='    <div class="rs-calendar__day">Sab</div>';
            calendarBody +='</div>';

            calendarBody +='<div class="rs-calendar__body" div>';

            while (WeekDayOfTheFistDayOfMonth>0){
                calendarBody += '<div class="rs-calendar__day">&nbsp;</div>';
                WeekDayOfTheFistDayOfMonth--; // used in next loop.
            }

            for (var i = 1; i <= monthDays; i++) {

                var generatedDay = createDayId(i);

                var _isInitialdate  = ( isInitialDate(i) == true ) ? ' is-today ' : '';
                var _hasEvent       = ( typeof dates[generatedDay] != 'undefined') ? ' has-event ' : '';
                var _isPast         = ( isPast(generatedDay) == true ) ? ' is-disabled ' : '';

                calendarBody +='<div class="rs-calendar__day  '+ _hasEvent + _isInitialdate + _isPast + '" data-day="'+ generatedDay +'" id="day-'+ generatedDay +'">';
                calendarBody +='    <span>'+i+'</span>';
                calendarBody +='</div>';

            }

            calendarBody +='</div>';

        return calendarBody;
    }

    function isPast(day){
        var day = new Date(day); //dd-mm-YYYY
        var today = new Date();

        today.setHours(0,0,0,0);

        if(day > today) {
            return false;
        }
        return true;
    }

    function nextMonth(){
        console.log(year +" --- "+ month)
        var newDate = new Date(year, month);
        var newDate = new Date(new Date(newDate).setMonth(newDate.getMonth()+1));
        dateNow = newDate;
    }

    function prevMonth(){
        var newDate = new Date(year, month);
        var newDate = new Date(new Date(newDate).setMonth(newDate.getMonth()-1));
        dateNow = newDate;
    }

    // https://github.com/feross/zero-fill
    function zeroFill (width, number, pad) {
      if (number === undefined) {
        return function (number, pad) {
          return zeroFill(width, number, pad)
        }
      }
      if (pad === undefined) pad = '0'
      width -= number.toString().length
      if (width > 0) return new Array(width + (/\./.test(number) ? 2 : 1)).join(pad) + number
      return number + ''
    }

    function setIdContainer(selector){
        selectorIdContainer = selector;
    }

    init();
    setInitialDate();

    return {

        compile: function(){
            init();
            return compile();
        },

        render: function(){
            init();
            render();
        },

        nextMonth: function(){
            nextMonth();
            init();
            render();
            var date = year + '-'  + zeroFill(2, (month + 1)) + '-' + zeroFill(2 , day);
            return date;
        },

        prevMonth: function(){
            prevMonth();
            init();
            render();
            var date = year + '-'  + zeroFill(2, (month + 1)) + '-' + zeroFill(2 , day)

            return date;
        },

        addDate: function(date){
            addDate(date);
        },

        setIdContainer: function(date){
            setIdContainer(date);
        },

        getNextMonth(){
            return getNextYear() + '-' + zeroFill(2, getNextMonth() + 1 ) +'-01';
        },

        getPrevMonth(){
            return getPrevYear() + '-' + zeroFill(2, getPrevMonth() + 1 ) +'-01';
        },

        setInitialDate(date){
            data = date.split('-');
            year = [0]
            month = [1]
            day = [2]

            init();
            render();
        }

    }
}


function toggleMenuMobile(){
    $('.drawer').toggleClass('is-open');
}

function hideMenuMobile(){
    $('.drawer').removeClass('is-open');
}

function showMenuMobile() {
    $('.drawer').addClass('is-open');
}

$(document).ready(function(){
    $('body').on('click', '.hamburguer', toggleMenuMobile);
    // $('body').on('click', '.sys-toggle-menu', toggleMenuMobile);

    $('.drawer__close, .sys-toggle-menu').on('click', hideMenuMobile);
})


function exibirBoxMensagem(){
    if( $('.js-box-mensagem').length > 0 ){
        $('.js-box-mensagem').slideDown();

        setTimeout(esconderBoxMensagem, 10000)
    }
}

function esconderBoxMensagem(){
    $('.js-box-mensagem').slideUp()
}

$(document).ready(function(){
    $('body').on('click','.js-box-mensagem-close', esconderBoxMensagem)
    exibirBoxMensagem();
});



// // -------------------------------------------------------------------
// // PROCESSAMENTO
// // -------------------------------------------------------------------

//     function getData(){

//         if( appData.data == null ){
//             throw('erro');
//         }

//         var request = services.pesquisa.all(appData);

//         request.done(function(response){
//             setResultado(response.resultado);
//             appData.data = response.proximo;
//             verMais()
//         });

//     }

//     function resetResultado(resultado){
//         searchData.resultado = [];
//     }

//     function setResultado(resultado){

//         resultado.forEach(function(item){
//             searchData.resultado.push(item);
//         });

//         // render()
//     }

//     function extractDia(){

//         var dias = [];

//         searchData.resultado.forEach(function(item){
//             dias.push( item.dia );
//         });

//         return dias;
//     }

//     function extractClinicas(){

//         var clinicasEncontradas = [];

//         var clinicas = [];

//         searchData.resultado.forEach(function(dia){
//             dia.clinicas.forEach(function(clinica){

//                 if(clinicasEncontradas.indexOf(clinica.nm_clinica) == -1){

//                     clinicasEncontradas.push(clinica.nm_clinica);

//                     clinicas.push({
//                        nm_clinica: clinica.nm_clinica,
//                        id_clinica: clinica.id_clinica
//                     });
//                 }

//             })
//         });

//         return clinicas;
//     }

//     function bindings(){
//         $('body').on('click','.sys-ver-mais', getData);
//     }

// // -------------------------------------------------------------------
// // RENDERISAÇÃO
// // -------------------------------------------------------------------

//     function listSeparator(dia, dia_extenso ){
//         var html = '';

//         html += '<div class="list-separator" data-dia="'+ dia +'">';
//         html += '    <div class="list-separator__icon"> <i class="fa fa-calendar"></i> </div>';
//         html += '    <div class="list-separator__content">'+ dia_extenso +'</div>';
//         html += '</div>';

//         return html;
//     }

//     function itemClinica(clinica, dia){

//         var html = '';

//         html += ' <div class="pesquisa-clinica sys-clinica" data-dia="'+ clinica.dia +'" data-id-clinica="'+ clinica.id_clinica +'">';
//         html += '     <div class="pesquisa-clinica__item">';
//         html += '         <div class="pesquisa-clinica__icon">';
//         html += '             <i class="fa fa-map-marker"></i>';
//         html += '         </div>';
//         html += '         <a href="http://localhost/hiper-consulta/site/app/site/unidade/?clinica=1&especialidade=23&data=2018-07-10" class="pesquisa-clinica__content">';
//         html += '             <address class="pesquisa-clinica__endereco">';
//         html += '                 <span class="pesquisa-clinica__cidade">';
//         html += '                     '+ clinica.nm_municipio +'';
//         html += '                 </span> <br>';
//         html += '                 <span class="pesquisa-clinica__bairro">';
//         html += '                     '+ clinica.nm_clinica +'';
//         html += '                 </span> <br>';
//         html += '                 <span class="pesquisa-clinica__logradouro">';
//         html += '                     '+ clinica.logradouro +' '+ clinica.numero +'  ';
//         html += '                 </span> <br>';
//         html += '                 <span class="pesquisa-clinica__complemento">';
//         html += '                 '+ clinica.bairro +', '+ clinica.nm_municipio +' - '+ clinica.nm_estado +' </span> <br>';
//         html += '             </address>';
//         html += '         </a>';
//         html += '     </div><!-- /pesquisa-clinica__item -->';
//         html += ' </div><!-- /pesquisa-clinica -->';
//         return html;
//     }

//     function dia(item){

//         var html = '';
//         html += '<div class="sys-dia space-bottom-medium" data-dia="'+ item.dia +'">';

//         html += listSeparator(item.dia, item.dia_extenso );

//         item.clinicas.forEach(function(clinica){
//             html += itemClinica(clinica, item.dia);
//         });

//         html += '</div>';

//         return html;
//     }

//     function verMais(){
//         if( appData.data == null ){
//             $('.sys-ver-mais').addClass('hidden');
//         }else{
//             $('.sys-ver-mais').removeClass('hidden');
//         }
//     }

//     function renderSelectFiltroDias(){

//         var dias = extractDia();
//         var html = '<option value=""></option>';

//         dias.forEach(function(dia){
//             html += '<option value="'+ dia +'">'+ dia +'</option>';
//         });

//         $('.sys-filtro-dia').html(html);
//     }

//     function renderSelectFiltroClinicas(){

//         var clinicas = extractClinicas();
//         var html = '<option value=""></option>';

//         clinicas.forEach(function(clinica){
//             html += '<option value="'+ clinica.id_clinica +'">'+ clinica.nm_clinica +'</option>';
//         });

//         $('.sys-filtro-clinica').html(html);
//     }


// // -------------------------------------------------------------------
// // RENDERISAÇÃO
// // -------------------------------------------------------------------

//     function render(){
//         var html = '';

//         searchData.resultado.forEach(function(itemResultado){
//             html += dia(itemResultado);
//         });

//         $('.sys-resultado-busca').html( html );

//         renderSelectFiltroDias()
//         renderSelectFiltroClinicas()
//     }

// // -------------------------------------------------------------------
// // INICIALIZAÇÃO
// // -------------------------------------------------------------------

// function initResultadoPesquisa(){

//     if( typeof appData !== 'undefined' ){
//         bindings();
//         getData();
//     }


// }


// $(document).ready( initResultadoPesquisa );


function toggleOptionEspecialidade(){

    toggleOptionEspecialidadeMobile()
    toggleOptionEspecialidadeDesktop()
}

function toggleOptionEspecialidadeMobile(){

    var input = $('.busca-mobile .segment__input:checked');

    $atual = input.parents('.busca-mobile .segment__item').attr('data-option-placeholder');
    $tipo = input.parents('.busca-mobile .segment__item').attr('data-type');

    if( $tipo == 'consulta' ){
        $('.busca-mobile .sys-option-consulta').removeClass('hidden');
        $('.busca-mobile .sys-option-exame').addClass('hidden');
    }else{
        $('.busca-mobile .sys-option-consulta').addClass('hidden');
        $('.busca-mobile .sys-option-exame').removeClass('hidden');
    }

    $('.busca-mobile .sys-select-tipo-atendimento option').eq(0).text($atual);
    $('.busca-mobile .sys-select-tipo-atendimento').prop('selectedIndex',0);
    // $('.options-especialidade').toggleClass('hidden');
}

function toggleOptionEspecialidadeDesktop(){

    var input = $('.busca-desktop .segment__input:checked');

    $atual = input.parents('.busca-desktop .segment__item').attr('data-option-placeholder');
    $tipo = input.parents('.busca-desktop .segment__item').attr('data-type');

    if( $tipo == 'consulta' ){
        $('.busca-desktop .sys-option-consulta').removeClass('hidden');
        $('.busca-desktop .sys-option-exame').addClass('hidden');
    }else{
        $('.busca-desktop .sys-option-consulta').addClass('hidden');
        $('.busca-desktop .sys-option-exame').removeClass('hidden');
    }

    $('.busca-desktop .sys-select-tipo-atendimento option').eq(0).text($atual);
    $('.busca-desktop .sys-select-tipo-atendimento').prop('selectedIndex',0);
    // $('.options-especialidade').toggleClass('hidden');
}



$(document).ready(function(){
    toggleOptionEspecialidade()
    $('body').on('click', '[data-type]', toggleOptionEspecialidade);
})



    var renders = {

        pesquisa : {

            // render
            listagem: function(){

                var html = '';

                store.pesquisa.resultado.forEach(function(itemResultado){
                    html += renders.pesquisa.dia(itemResultado);
                });

                $('.sys-resultado-busca').html( html );

            },

            dia: function(item){

                var html = '';
                html += '<div class="sys-dia space-bottom-medium" data-dia="'+ item.dia +'">';

                html += renders.pesquisa.separador(item.dia, item.dia_extenso );

                item.clinicas.forEach(function(clinica){
                    html += renders.pesquisa.itemClinica(clinica, item.dia);
                });

                html += '</div>';

                return html;
            },

            separador: function(dia, dia_extenso){
                var html = '';

                html += '<div class="list-separator" data-dia="'+ dia +'"  id="sys-separador-dia-'+ dia +'" >';
                html += '    <div class="list-separator__icon"> <i class="fa fa-calendar"></i> </div>';
                html += '    <div class="list-separator__content">'+ dia_extenso +'</div>';
                html += '</div>';

                return html;
            },

            itemClinica: function (clinica, dia){

                var idEspecialidade = store.pesquisa.parametros.especialidade;

                var html = '';

                // html += ' <div class="pesquisa-clinica sys-clinica" data-dia="'+ clinica.dia +'" data-id-clinica="'+ clinica.id_clinica +'">';
                // html += '     <div class="pesquisa-clinica__item">';
                // html += '         <div class="pesquisa-clinica__icon">';
                // html += '             <i class="fa fa-map-marker"></i>';
                // html += '         </div>';
                // html += '         <a href="'+ base_url +'unidade/?clinica='+ clinica.id_clinica +'&especialidade='+idEspecialidade+'&data='+ clinica.dia +'" class="pesquisa-clinica__content">';
                // html += '             <address class="pesquisa-clinica__endereco">';
                // html += '                 <span class="pesquisa-clinica__cidade">';
                // html += '                     '+ clinica.nm_municipio +'';
                // html += '                 </span> <br>';
                // html += '                 <span class="pesquisa-clinica__bairro">';
                // html += '                     '+ clinica.nm_clinica +'';
                // html += '                 </span> <br>';
                // html += '                 <span class="pesquisa-clinica__logradouro">';
                // html += '                     '+ clinica.logradouro +' '+ clinica.numero +'  ';
                // html += '                 </span> <br>';
                // html += '                 <span class="pesquisa-clinica__complemento">';
                // html += '                 '+ clinica.bairro +', '+ clinica.nm_municipio +' - '+ clinica.nm_estado +' </span> <br>';
                // html += '             </address>';
                // html += '         </a>';
                // html += '     </div><!-- /pesquisa-clinica__item -->';
                // html += ' </div><!-- /pesquisa-clinica -->';

                // console.log(clinica)

                html += '     <div class="pesquisa-clinica sys-clinica" data-dia="2018-06-15" data-id-clinica="1">';
                html += '         <div class="pesquisa-clinica__item">';
                html += '             <div class="pesquisa-clinica__icon">';
                html += '                 <i class="fa fa-map-marker"></i>';
                html += '                 <figure class="foto-clinica"><img src="'+ clinica.img_thumb +'" alt=""></figure>';
                html += '             </div>';
                html += '             <a href="'+ base_url +'unidade/?clinica='+ clinica.id_clinica +'&especialidade='+idEspecialidade+'&data='+ clinica.dia +'" class="pesquisa-clinica__content">';
                html += '                 <address class="pesquisa-clinica__endereco">';
                html += '                     <span class="pesquisa-clinica__cidade">';
                html += '                         Niterói';
                html += '                     </span> <br>';
                html += '                     <span class="pesquisa-clinica__bairro">';
                html += '                         '+ clinica.nm_clinica;
                html += '                     </span> <br>';
                html += '                     <span class="pesquisa-clinica__logradouro">';
                html += '                         '+ clinica.logradouro +' '+ clinica.numero +'  ';
                html += '                     </span> <br>';
                html += '                     <span class="pesquisa-clinica__complemento">';
                html += '                     '+ clinica.bairro +', '+ clinica.nm_municipio +' - '+ clinica.nm_estado +' </span> <br>';
                html += '                 </address>';
                html += '                 <!-- <span class="pesquisa-clinica__vagas">2 vagas</span> -->';
                html += '             </a>';
                html += '         </div><!-- /pesquisa-clinica__item -->';
                html += '     </div>';


                return html;

            },

            selectFiltroClinicas: function(){

                var clinicas = computed.pesquisa.extractClinicas();
                var html = '<option value=""></option>';

                clinicas.forEach(function(clinica){
                    html += '<option value="'+ clinica.id_clinica +'">'+ clinica.nm_clinica +'</option>';
                });

                $('.sys-filtro-clinica').html(html);
            },

            selectFiltroDias: function(){

                var dias = computed.pesquisa.extractDia();
                var html = '<option value=""></option>';

                dias.forEach(function(dia){
                    html += '<option value="'+ dia +'">'+ dia +'</option>';
                });

                $('.sys-filtro-dia').html(html);
            }

        },

        // ----------------------------------------------------------------
        //

        unidade: {

            // render
            listagem: function(){

                var html = '';

                store.unidade.resultado.forEach(function(itemResultado){
                    html += renders.unidade.dia(itemResultado);
                });

                $('.sys-resultado-busca').html( html );

            },

            dia: function(item){

                var html = '';
                html += '<div class="lista-medico sys-dia" data-dia="'+ item.dia +'">';

                html += renders.unidade.separador(item.dia, item.dia_extenso );

                item.profissionais.forEach(function(profissinal){
                    html += '<div class="pesquisa-medico">';
                    html += renders.unidade.itemProfissional(profissinal, item.dia);
                     html += '</div>';
                });

                html += '</div>';

                return html;
            },

            separador: function(dia, dia_extenso){
                var html = '';

                html += '<div class="list-separator" data-dia="'+ dia +'"  name="dia-'+ dia +'"  id="sys-separador-dia-'+ dia +'" >';

                // html += '<div class="list-separator" data-dia="'+ dia +'" name="dia-'+ dia +'" >';
                html += '    <div class="list-separator__icon"> <i class="fa fa-calendar"></i> </div>';
                html += '    <div class="list-separator__content">'+ dia_extenso +'</div>';
                html += '</div>';

                return html;
            },

            itemProfissional: function (profissional, dia){

                var html = '';

                html += '<div class="card has-shadow">';
                html += '    <div class="card__body">';
                html += '        <div class="media">';
                html += '            <div class="media-left">';
                // html += '                <a href="#">';
                html += '                    <img class="media-object avatar is-medium" src="'+ profissional.foto +'">';
                // html += '                </a>';
                html += '            </div><!-- /media-left -->';
                html += '            <div class="media-body">';
                html += '                <h4 class="media-heading color-primary fs-small fw-bold">';
                html += profissional.nm_profissional;
                html += '                </h4>';
                html += '                <span class="fs-small color-ligth"> CRM - '+ profissional.crm +' </span>';
                html += '            </div><!-- /media-body -->';
                html += '        </div><!-- /media -->';
                html += '    </div><!-- /card__body -->';
                html += '    <div class="lista-horarios">';

                profissional.atendimentos.forEach(function(at){
                    html += '        <a class="btn is-ghost is-primary" href="'+ at.url_cadastro +'">';
                    html += at.hora
                    html += '        </a>';
                });

                html += '    </div>';
                html += '</div>';

                return html;
            },

        }

    }



function mascarasDeFormularios(){

    $('.vdate').mask('99/99/9999');
    $('.vcep').mask('99999-999', {reverse: true});
    $('.vtel').mask('(99) 9999-9999?9');
    $('.vcpf').mask('999.999.999-99', {reverse: true});
    $('.vcnpj').mask('99.999.999/9999-99', {reverse: true});
    $('.vrg').mask('99.999.999-9', {reverse: true});
    $('.vmoney').mask('999.999.999.999.999,99', {reverse: true})
    $('.vnota').mask('99.9', {reverse: true})
    $('.vtime').mask('99:99', {reverse: true})

}

mascarasDeFormularios();

// -------------------------------------------------------------------
// REQUISIÇÕES
// -------------------------------------------------------------------

    var services = {

        pesquisa: {
            all: function(data){
                showLoading();
                var request = $.getJSON( base_url + 'Pesquisa/dados/',data);
                request.done(hideLoading)
                return request;
            }
        },

        unidade: {
            all: function(data){
                showLoading();
                var request = $.getJSON( base_url + 'Unidade/',data);
                request.done(hideLoading)
                return request;
            }
        },

        api: {

            clincasComEspecialidade: function(data){
                showLoading();
                var request = $.getJSON( base_url + 'api/v1/Clinica',data);
                request.done(hideLoading)
                return request;
            },

            especialidades: function(){
                showLoading();
                var request = $.getJSON( base_url + 'api/v1/Especialidade');
                request.done(hideLoading)
                return request;
            },

            horariosDia: function(data){
                showLoading();
                var request = $.getJSON( base_url + 'api/v1/Horarios/dia',data);
                request.done(hideLoading)
                request.fail(hideLoading)
                return request;
            }

        }

    }

function showLoading(){
    $('.loading').show();
}

function hideLoading(){
    setTimeout(function(){
        $('.loading').hide();
    },1000)

}


   var store = {

        pesquisa: {
            parametros: {
                date: null,
                clinica: null,
                especialidade: null,
            },
            resultado: [],
        },

        unidade: {
            parametros: {
                date: null,
                clinica: null,
                especialidade: null,
            },
            resultado: [],
        },

        reagendamento: {
            parametros: {
                date: null,
                clinica: null,
                especialidade: null,
            },
            horarios: null,
            especialidades: [],
            resultado: [],
        }
    }

    var eventBus = {

        event: [],

        on: function(name, func){

            eventBus.event[name] = func;

        },

        emit: function(name, param){

            if(eventBus.event[name]){
                eventBus.event[name](param);
                return true;
            }
            console.log('Event "'+ name +'" is not registered')
        }

    }



// -------------------------------------------------------------------
    var computed = {

        pesquisa: {

            extractDia: function(){

                var dias = [];

                store.pesquisa.resultado.forEach(function(item){
                    dias.push( item.dia );
                });

                return dias;
            },

            extractClinicas: function(){

                var clinicasEncontradas = [];

                var clinicas = [];

                store.pesquisa.resultado.forEach(function(dia){
                    dia.clinicas.forEach(function(clinica){

                        if(clinicasEncontradas.indexOf(clinica.nm_clinica) == -1){

                            clinicasEncontradas.push(clinica.nm_clinica);

                            clinicas.push({
                               nm_clinica: clinica.nm_clinica,
                               id_clinica: clinica.id_clinica
                            });
                        }

                    })
                });

                return clinicas;
            },

            hasDate: function(){

                if( store.pesquisa.parametros.date == null ){
                    return false;
                }

                return true;
            },

            canInit: function(){

                if( typeof dadosPesquisa == 'undefined' ){
                    return false;
                }

                return true;
            },
        },


        unidade: {
            hasDate: function(){

                if( store.unidade.parametros.date == null ){
                    return false;
                }

                return true;
            },

            canInit: function(){

                if( typeof dadosUnidade == 'undefined' ){
                    return false;
                }

                return true;
            },
        }
    }

// -------------------------------------------------------------------
    var mutators = {

        pesquisa: {

            resetResultado: function(){
                store.pesquisa.resultado = []
            },

            setResultado: function( resultado ){
                resultado.forEach(function(item){
                    store.pesquisa.resultado.push(item);
                });
            },

            setDadosIniciais: function(){
                mutators.pesquisa.setDate( dadosPesquisa.data );
                store.pesquisa.parametros.clinica       = dadosPesquisa.clinica;
                store.pesquisa.parametros.especialidade = dadosPesquisa.especialidade;
            },

            setDate: function(date){
                console.log( date )
                store.pesquisa.parametros.date = date;
            }

        },

        unidade: {

            resetResultado: function(){
                store.unidade.resultado = []
            },

            setResultado: function( resultado ){
                resultado.forEach(function(item){
                    store.unidade.resultado.push(item);
                });
            },

            setDadosIniciais: function(){

                mutators.unidade.setDate( dadosUnidade.data );
                store.unidade.parametros.clinica       = dadosUnidade.clinica;
                store.unidade.parametros.especialidade = dadosUnidade.especialidade;
            },

            setDate: function(date){
                console.log( 'SET DATE' )
                console.log( date )
                store.unidade.parametros.date = date;
            }

        }

    }
// -------------------------------------------------------------------
    var actions = {

        pesquisa: {

            pesquisar: function(){

                if( !computed.pesquisa.hasDate() ){
                    throw('Erro: não existe data configurada para pesquisar');
                }

                var request = services.pesquisa.all( store.pesquisa.parametros );

                request.done(function(response){
                    eventBus.emit('pesquisaCarregada',response);
                });

            },

            nextMonth: function(){
                mutators.pesquisa.setDate( calendario.nextMonth() )
                mutators.pesquisa.resetResultado();
                actions.pesquisa.pesquisar();
            },

            prevMonth: function(){
                mutators.pesquisa.setDate( calendario.prevMonth() )
                mutators.pesquisa.resetResultado();
                actions.pesquisa.pesquisar();
            }

        },

        unidade: {

            pesquisar: function(){

                if( !computed.unidade.hasDate() ){
                    throw('Erro: não existe data configurada para pesquisar unidade');
                }

                var request = services.unidade.all( store.unidade.parametros );

                request.done(function(response){
                    eventBus.emit('UnidadeCarregada', response);
                });

            },

            nextMonth: function(){
                mutators.unidade.setDate( calendario.nextMonth() )
                mutators.unidade.resetResultado();
                actions.unidade.pesquisar();
            },

            prevMonth: function(){
                mutators.unidade.setDate( calendario.prevMonth() )
                mutators.unidade.resetResultado();
                actions.unidade.pesquisar();
            }

        }

    }

    var bindings = {
        pesquisa: function(){
            $('body').on('click','.sys-ver-mais-pesquisa', actions.pesquisa.pesquisar);
            $('body').on('click','.has-event', myApp.scrollToDay);
            $('body').on('click','#calendar-prev', actions.pesquisa.prevMonth);
            $('body').on('click','#calendar-next', actions.pesquisa.nextMonth);
        },
        unidade: function(){
            $('body').on('click','.has-event', myApp.scrollToDay)
            $('body').on('click','.sys-ver-mais-unidade', actions.unidade.pesquisar);
            $('body').on('click','#calendar-prev', actions.unidade.prevMonth);
            $('body').on('click','#calendar-next', actions.unidade.nextMonth);
        }
    }

    var behavior = {

        showButtonVerMais: function(){
            if( computed.pesquisa.hasDate() || computed.unidade.hasDate() ){
                $('.sys-ver-mais').removeClass('hidden');
            }else{
                $('.sys-ver-mais').addClass('hidden');
            }
        }

    }


// -------------------------------------------------------------------

var calendario = new tsCalendar();

var myApp = {

    startPesquisa: function(){

        if( computed.pesquisa.canInit() ){

            bindings.pesquisa();
            mutators.pesquisa.setDadosIniciais();
            actions.pesquisa.pesquisar();

            eventBus.on('pesquisaCarregada', function(response){

                console.log('Ouvido::pesquisaCarregada')

                mutators.pesquisa.setResultado(response.resultado);
                mutators.pesquisa.setDate(response.proximo);

                renders.pesquisa.listagem();
                renders.pesquisa.selectFiltroDias();
                renders.pesquisa.selectFiltroClinicas();

                behavior.showButtonVerMais();

                myApp.addData(response.resultado)
                calendario.render();

            });

        }

    },

    startUnidade: function(){

        if( computed.unidade.canInit() ){

            bindings.unidade();
            mutators.unidade.setDadosIniciais();
            actions.unidade.pesquisar();

            eventBus.on('UnidadeCarregada', function(response){

                console.log('Ouvido:: UnidadeCarregada');

                mutators.unidade.setResultado(response.resultado);
                mutators.unidade.setDate(response.proximo);

                renders.unidade.listagem();

                myApp.addData(response.resultado)
                calendario.render();

                behavior.showButtonVerMais();

            });
        }

    },

    scrollToDay: function(){
        var day = $(this).attr('data-day');
        var roll = $('#sys-separador-dia-' + day).offset().top;

         $('html, body').animate({
            scrollTop: roll - 80
        }, 400);
    },

    addData: function(resultado){
        resultado.forEach(function(d){
            calendario.addDate(d.dia);
        })
    }

}

// ------------------------------------------------------------

var reagendamento = {

    computed: {

        extractDia: function(){

            var dias = [];

            store.reagendamento.resultado.forEach(function(item){
                dias.push( item.dia );
            });

            return dias;
        },

        extractClinicas: function(){

            var clinicasEncontradas = [];

            var clinicas = [];

            store.reagendamento.resultado.forEach(function(dia){
                dia.clinicas.forEach(function(clinica){

                    if(clinicasEncontradas.indexOf(clinica.nm_clinica) == -1){

                        clinicasEncontradas.push(clinica.nm_clinica);

                        clinicas.push({
                           nm_clinica: clinica.nm_clinica,
                           id_clinica: clinica.id_clinica
                        });
                    }

                })
            });

            return clinicas;
        },

        extractDiasClinicas: function(idClinica){

            var diasEncontrados = [];

            var dias = [];

            store.reagendamento.resultado.forEach(function(dia){

                if(diasEncontrados.indexOf(dia.dia) == -1){

                    dia.clinicas.forEach(function(clinica){

                        if( clinica.id_clinica == idClinica ){

                            diasEncontrados.push(dia.dia);
                            dias.push(dia);
                        }
                    })
                }
            });

            return dias;
        },


        extractProfissionaisHorario: function(){

            var profissionaisId = [];
            var profissionais = [];

            store.reagendamento.horarios.forEach(function(dia){

                dia.profissionais.forEach(function(profissional){
                    if(profissionaisId.indexOf(profissional.profissional_id) == -1){
                        profissionais.push(profissional)
                    }
                });

            });

            return profissionais;
        },

        extractHorarios: function(id){

            var profissionaisId = [];
            var atendimentos = [];

            store.reagendamento.horarios.forEach(function(dia){
                dia.profissionais.forEach(function(profissional){
                    if( profissional.profissinal_id == id){
                        atendimentos = profissional.atendimentos;
                    }
                });
            });

            return atendimentos;
        },

    },

    mutators: {

        resetResultado: function(){
            store.reagendamento.resultado = []
        },

        setResultado: function( resultado ){
            resultado.forEach(function(item){
                store.reagendamento.resultado.push(item);
            });
        },

        setEspecialidades: function( resultado ){
            store.reagendamento.especialidades = resultado;
        },

        setDadosIniciais: function(){
            reagendamento.mutators.setDate( dadosReagendamento.data );
            store.reagendamento.clinica = dadosReagendamento.clinica;
            store.reagendamento.parametros.especialidade = dadosReagendamento.especialidade;
        },

        setDate: function(date){
            store.reagendamento.parametros.date = date;
        },

        setHorarios: function(horarios){
            store.reagendamento.horarios = horarios;
        },

        setParametroEspecialidade: function(especialidade){
            store.reagendamento.parametros.especialidade = especialidade;
        }


    },

    renders: {

        setOptionsEspecialidade: function(){

            var html = '';

            html += '<option value=""> -- Consultas </option>';

            store.reagendamento.especialidades.consultas.forEach(function(especialidade){
                html += '<option value="'+ especialidade.id_especialidade +'">'+ especialidade.nm_especialidade +'</option>';
            });

            html += '<option value=""> -- Exames </option>';

            store.reagendamento.especialidades.exames.forEach(function(especialidade){
                html += '<option value="'+ especialidade.id_especialidade +'">'+ especialidade.nm_especialidade +'</option>';
            });

            $('[name=especialidade_]').html(html);

        },

        setOptionsClinica: function(){

            clinicas = reagendamento.computed.extractClinicas();

            var html = '';

            html += '<option value="">Escolha a clínica</option>';

            clinicas.forEach(function(clinica){
                html += '<option value="'+ clinica.id_clinica +'">'+ clinica.nm_clinica +'</option>';
            });

            $('[name=clinica]').html(html);
        },

        setOptionsDatas: function(){
           $dias = reagendamento.computed.extractDia();
        },

        setSelected: function(name, value,){
            $("[name=" + name + "] > [value=" + value + "]").attr("selected", "true");
        },

        setCalendar: function(){

            var clinica = store.reagendamento.clinica;
            reagendamento.renders.setSelected('clinica', clinica);

            var diasComClincaSelecionada = reagendamento.computed.extractDiasClinicas(clinica)

            reagendamento.addDataCalendario( diasComClincaSelecionada );

            calendario.render();

            reagendamento.comportamento.disableSubmit()
            reagendamento.comportamento.resetSelectProfissional()
            reagendamento.comportamento.resetSelectHorario()

        },

        setOptionsProfissional: function(){
            var profissionais = reagendamento.computed.extractProfissionaisHorario();

            var html = '';

            html += '<option value="">Escolha o profissional</option>';

            profissionais.forEach(function(profissional){
                html += '<option value="'+ profissional.profissinal_id +'">'+ profissional.nm_profissional +'</option>';
            });

            $('[name=profissional]').html(html);

        },

        setOptionsHorario: function(){
            var profissional = $('[name=profissional]').val();

            var atendimentos = reagendamento.computed.extractHorarios( profissional );

            html = '<option value="">Escolha o horário </option>';

            atendimentos.forEach(function(atendimento){
                html += '<option value="'+ atendimento.id_atendimento +'" data-dia="'+ atendimento.dia +'" data-hora="'+ atendimento.hora +'">'+ atendimento.hora +'</option>';
            });

            $('[name=horario]').html(html);

            reagendamento.comportamento.disableSubmit()
        }

    },

    comportamento: {

        resetSelectProfissional: function(){
            $('[name=profissional]').html('');
        },

        resetSelectHorario: function(){
            $('[name=horario]').html('');
        },

        disableSubmit: function(){
            $('.js-horario-reagendamento').html('')
            $('[type=submit]').hide();
        },

        enableSubmit: function(){
            var mesAno = $('.rs-calendar__title').text();

            var hora = $("[name=horario] option:selected").attr('data-hora');
            var dia = $("[name=horario] option:selected").attr('data-dia');

            var data = dia.split('-')
            var mesAno = mesAno.split(' ')

            var text = data[2] + ' de ' + mesAno[0] + ' de ' + data[0]+ ' às ' + hora + ' horas ';

            $('.js-horario-reagendamento').html(text)

            var idAtendimento = $('[name=horario]').val();
            $('[name=id_atendimento]').val(idAtendimento);

            $('[type=submit]').show();

        },

    },

    actions: {

        clinicas: function(){

            var request = services.api.clincasComEspecialidade( store.reagendamento.parametros );
            request.done(function(response){
                eventBus.emit('reagendamento_inicial_carregado',response);
            });

        },

        especialidade: function(){

            var request = services.api.especialidades();

            request.done(function(response){
                eventBus.emit('reagendamento_espcialidades_carregadas',response);
            });

        },

        horariosDia: function(){

            var dados = {
                date: $(this).attr('data-day'),
                clinica: store.reagendamento.clinica,
                especialidade: store.reagendamento.parametros.especialidade
            }

            var request = services.api.horariosDia(dados);
            request.done(function(response){
                eventBus.emit('reagendamento_horarios_carregados',response);
            });
        },

        pega: function(){
           var especialidade =  $('[name=especialidade_]').val();
           reagendamento.mutators.setParametroEspecialidade(especialidade)
           reagendamento.actions.clinicas()
        },

        nextMonth: function(){
            reagendamento.mutators.setDate( calendario.nextMonth() )
            reagendamento.mutators.resetResultado();
            reagendamento.actions.clinicas();
        },

        prevMonth: function(){
            reagendamento.mutators.setDate( calendario.prevMonth() )
            reagendamento.mutators.resetResultado();
            reagendamento.actions.clinicas();
        }

    },

    bindings: function(){
        $(document).on('change','[name=especialidade_]', reagendamento.actions.pega);

        $(document).on('change','[name=clinica]', reagendamento.renders.setCalendar);

        $(document).on('change','[name=profissional]', reagendamento.renders.setOptionsHorario);

        $(document).on('change','[name=horario]', reagendamento.comportamento.enableSubmit);

        $('body').off().on('click','.reagendamento-calendar .has-event', reagendamento.actions.horariosDia);

        $('body').on('click','.reagendamento-calendar #calendar-prev', reagendamento.actions.prevMonth);
        $('body').on('click','.reagendamento-calendar #calendar-next', reagendamento.actions.nextMonth);
    },

    init: function(){

        reagendamento.bindings()

        if( typeof dadosReagendamento != 'undefined' ){

            reagendamento.bindings();
            reagendamento.mutators.setDadosIniciais();

            eventBus.on('reagendamento_espcialidades_carregadas', function(response){
                reagendamento.mutators.setEspecialidades(response);
                reagendamento.renders.setOptionsEspecialidade()

                var especialidade = store.reagendamento.parametros.especialidade;
                reagendamento.renders.setSelected('especialidade_', especialidade);
                reagendamento.actions.clinicas();
            });

            eventBus.on('reagendamento_inicial_carregado', function(response){

                reagendamento.comportamento.disableSubmit()
                reagendamento.comportamento.resetSelectProfissional()
                reagendamento.comportamento.resetSelectHorario()


                reagendamento.mutators.setResultado(response.resultado);
                reagendamento.mutators.setDate(response.proximo);
                reagendamento.renders.setOptionsClinica();
                reagendamento.renders.setCalendar();
            });

            eventBus.on('reagendamento_horarios_carregados', function(response){
                reagendamento.mutators.setHorarios(response.resultado);
                reagendamento.renders.setOptionsProfissional()
            });



            reagendamento.actions.especialidade();
        }

    },

    addDataCalendario: function(resultado){

        // data = resultado[0].dia.split('-');

        // calendario = tsCalendar( data[0], data[1], data[2] )

        resultado.forEach(function(d){
            calendario.addDate(d.dia);
        });
    }

}

// -------------------------------------------------------------------

$(document).ready(function(){
    myApp.startPesquisa();
    myApp.startUnidade();

});


reagendamento.init();
